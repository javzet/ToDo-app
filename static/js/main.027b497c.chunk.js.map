{"version":3,"sources":["components/context/ToDo-Context.tsx","components/HamburgerIcon.tsx","components/Appbar.tsx","images/return-icon.tsx","images/times-circle-icon.tsx","components/CreateForm.tsx","hooks/useForm.tsx","helpers/saveData.ts","images/image-button.tsx","images/todo-task-button.tsx","components/CreateButton.tsx","images/image-note.tsx","components/NoDataComponent.tsx","components/Grid/DataGridItem.tsx","helpers/switchClassesElement.ts","hooks/useActionListElement.ts","images/bars-icon.tsx","images/column-icon.tsx","images/grid-icon.tsx","components/Grid/StyleIcons.tsx","components/Grid/DataGrid.tsx","ToDo.tsx","helpers/getData.ts","index.tsx"],"names":["TODO_CONTEXT","createContext","HamburguerIcon","className","Appbar","ReturnIcon","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","TimesCircleIcon","CreateForm","props","form","useState","formState","setFormState","initalState","state","onInputChange","value","field","onReset","useForm","noteTitle","noteText","todoContext","useContext","handleActionClick","actionType","action","data","title","type","id","uuid","setGeneralData","generalData","dataStored","localStorage","getItem","dataToStore","setItem","JSON","stringify","dataRecovered","parse","saveData","setNewCreation","active","placeholder","onChange","target","name","onClick","ImageButton","TodoTaskButton","CreateButton","context","ImageNote","NoDataComponent","DataGridItem","data-data","switchClassesElement","classes","currentClass","element","callback","forEach","classList","add","remove","useActionListElement","elementChildList","switchActiveClassBetweenElements","elementId","activeClass","el","BarsIcon","ColumnIcon","GridIcon","StyleIcons","gridRef","GridButtonStyleRef","useRef","ColumnButtonStyleRef","BarsButtonStyleRef","elementList","setElementList","useEffect","current","handleButtonStyleClick","actionPressedType","useLayoutEffect","ref","DataGrid","gridDataRef","length","map","item","key","ToDo","newCreation","getData","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.027b497c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { DataType } from \"../../types\";\r\n\r\ninterface ToDosProps {\r\n  generalData: DataType[];\r\n  setGeneralData: React.Dispatch<React.SetStateAction<any[]>>;\r\n  newCreation: { type: \"notes\" | \"todos\" | \"\"; active: boolean };\r\n  setNewCreation: React.Dispatch<\r\n    React.SetStateAction<{ type: \"notes\" | \"todos\" | \"\"; active: boolean }>\r\n  >;\r\n}\r\n\r\nexport const TODO_CONTEXT = createContext<ToDosProps>({} as ToDosProps);\r\n","export const HamburguerIcon = () => {\r\n  return (\r\n    <div className=\"hamburger-icon\">\r\n      <div className=\"hamburger-container\">\r\n        <div className=\"line\"></div>\r\n        <div className=\"line\"></div>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { HamburguerIcon } from \"./HamburgerIcon\";\r\n\r\nexport const Appbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"container\">\r\n        <HamburguerIcon />\r\n        <h1>ToDo App</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const ReturnIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"undo-alt\"\r\n      className=\"return-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const TimesCircleIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"far\"\r\n      data-icon=\"times-circle\"\r\n      className=\"times-circle-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { saveData } from \"../helpers/saveData\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport { ReturnIcon } from \"../images/return-icon\";\r\nimport { TimesCircleIcon } from \"../images/times-circle-icon\";\r\nimport { ActionType } from \"../types\";\r\nimport { TODO_CONTEXT } from \"./context/ToDo-Context\";\r\n\r\nexport const CreateForm = (props: { type: ActionType }) => {\r\n  const { noteTitle, noteText, onInputChange, onReset } = useForm({\r\n    noteTitle: \"\",\r\n    noteText: \"\",\r\n  });\r\n\r\n  const todoContext = useContext(TODO_CONTEXT);\r\n\r\n  const handleActionClick = (\r\n    actionType: ActionType,\r\n    action: \"save\" | \"cancel\"\r\n  ) => {\r\n    if (action === \"save\") {\r\n      const data = {\r\n        title: noteTitle,\r\n        data: noteText,\r\n        type: actionType,\r\n        id: uuid(),\r\n      };\r\n      todoContext.setGeneralData([...todoContext.generalData, data]);\r\n      saveData(data);\r\n      todoContext.setNewCreation({ type: \"\", active: false });\r\n      onReset();\r\n    } else {\r\n      todoContext.setNewCreation({ type: \"\", active: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Escribe un título\"\r\n        value={noteTitle}\r\n        onChange={({ target: { value } }) => onInputChange(value, \"noteTitle\")}\r\n      />\r\n      <textarea\r\n        name=\"\"\r\n        placeholder={\r\n          props.type === \"notes\"\r\n            ? \"Escribe una nota...\"\r\n            : \"Escribe una lista de tareas...\"\r\n        }\r\n        value={noteText}\r\n        onChange={({ target: { value } }) => onInputChange(value, \"noteText\")}\r\n      ></textarea>\r\n      <div className=\"tool-buttons\">\r\n        <button\r\n          className=\"tool-button\"\r\n          onClick={() => handleActionClick(props.type, \"save\")}\r\n        >\r\n          <ReturnIcon />\r\n          <span>Guardar {props.type === \"notes\" ? \"nota\" : \"lista\"}</span>\r\n        </button>\r\n        <button\r\n          className=\"tool-button\"\r\n          onClick={() => handleActionClick(props.type, \"cancel\")}\r\n        >\r\n          <TimesCircleIcon />\r\n          <span>Descartar {props.type === \"notes\" ? \"nota\" : \"lista\"}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = <T extends Object>(form: T) => {\r\n  const [formState, setFormState] = useState(form);\r\n  const initalState = form;\r\n\r\n  const onInputChange = (value: string, field: keyof T) => {\r\n    setFormState({\r\n      ...formState,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const onReset = () => {\r\n    setFormState(initalState);\r\n  };\r\n\r\n  return { ...formState, state: formState, onInputChange, onReset };\r\n};\r\n","import { DataType } from \"../types\";\r\n\r\n// eslint-disable-next-line\r\nexport const saveData = <T extends DataType>(data: DataType) => {\r\n  let dataStored = localStorage.getItem(\"dataStored\");\r\n\r\n  if (dataStored === null) {\r\n    let dataToStore: DataType[] = [];\r\n\r\n    dataToStore = [...dataToStore, data];\r\n    localStorage.setItem(\"dataStored\", JSON.stringify(dataToStore));\r\n  } else {\r\n    let dataRecovered: DataType[] = JSON.parse(dataStored);\r\n\r\n    dataRecovered = [...dataRecovered, data];\r\n    localStorage.setItem(\"dataStored\", JSON.stringify(dataRecovered));\r\n  }\r\n};\r\n","export const ImageButton = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"far\"\r\n      data-icon=\"image\"\r\n      className=\"images option-button\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const TodoTaskButton = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"far\"\r\n      data-icon=\"check-square\"\r\n      className=\"check-square option-button\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ImageButton } from \"../images/image-button\";\r\nimport { TodoTaskButton } from \"../images/todo-task-button\";\r\nimport { TODO_CONTEXT } from \"./context/ToDo-Context\";\r\n\r\nexport const CreateButton = () => {\r\n  const context = useContext(TODO_CONTEXT);\r\n\r\n  const handleCreateNoteButton = () => {\r\n    context.setNewCreation({ type: \"notes\", active: true });\r\n  };\r\n\r\n  const handleCreateTodoButton = () => {\r\n    context.setNewCreation({ type: \"todos\", active: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-note\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Crear una nota...\"\r\n        onClick={handleCreateNoteButton}\r\n      />\r\n      <div className=\"option-buttons\">\r\n        <div\r\n          className=\"todo-button option-button\"\r\n          onClick={handleCreateTodoButton}\r\n        >\r\n          <TodoTaskButton />\r\n        </div>\r\n        <div className=\"create-button option-button\">\r\n          <ImageButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const ImageNote = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"sticky-note\"\r\n      className=\"note-image\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import { ImageNote } from \"../images/image-note\";\r\nimport { CreateButton } from \"./CreateButton\";\r\n\r\nexport const NoDataComponent = () => {\r\n  return (\r\n    <>\r\n      <div className=\"no-notes\">\r\n        <ImageNote />\r\n        <p>Aún no hay notas creadas</p>\r\n      </div>\r\n      <CreateButton />\r\n    </>\r\n  );\r\n};\r\n","export const DataGridItem = ({\r\n  title,\r\n  data,\r\n  id,\r\n  type,\r\n}: {\r\n  title: string;\r\n  data: string;\r\n  id: string;\r\n  type: \"notes\" | \"todos\";\r\n}) => {\r\n  return (\r\n    <div className=\"data-grid-item\" data-data={id}>\r\n      <span>{title}</span>\r\n      <p>{data}</p>\r\n    </div>\r\n  );\r\n};\r\n","export function switchClassesElement<E extends HTMLElement | null>(\r\n  classes: string[],\r\n  currentClass: string,\r\n  element: E,\r\n  callback?: () => void\r\n) {\r\n  classes.forEach((className) => {\r\n    if (className === currentClass) {\r\n      element?.classList.add(className);\r\n    } else {\r\n      element?.classList.remove(className);\r\n    }\r\n  });\r\n  if (callback) callback();\r\n}\r\n","import { ElementList } from \"../types\";\r\n\r\nexport function useActionListElement<EL extends HTMLElement>(\r\n  elementChildList: ElementList<EL>\r\n) {\r\n  const switchActiveClassBetweenElements = (\r\n    elementId: string,\r\n    activeClass: string,\r\n    callback?: () => void\r\n  ) => {\r\n    elementChildList.forEach((el) => {\r\n      if (el?.id === elementId) {\r\n        el.classList.add(activeClass);\r\n      } else {\r\n        el?.classList.remove(activeClass);\r\n      }\r\n    });\r\n    if (callback) callback();\r\n  };\r\n\r\n  return {\r\n    switchActiveClassBetweenElements,\r\n  };\r\n}\r\n","export const BarsIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"bars\"\r\n      className=\"bars-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const ColumnIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"columns\"\r\n      className=\"column-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const GridIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"border-all\"\r\n      className=\"grid-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 64v128H256V96zm-192 0v128H64V96zM64 416V288h128v128zm192 0V288h128v128z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { switchClassesElement } from \"../../helpers/switchClassesElement\";\r\nimport { useActionListElement } from \"../../hooks/useActionListElement\";\r\nimport { BarsIcon } from \"../../images/bars-icon\";\r\nimport { ColumnIcon } from \"../../images/column-icon\";\r\nimport { GridIcon } from \"../../images/grid-icon\";\r\nimport { ElementList } from \"../../types\";\r\n\r\nexport const StyleIcons = ({\r\n  gridRef,\r\n}: {\r\n  gridRef: React.RefObject<HTMLDivElement>;\r\n}) => {\r\n  const GridButtonStyleRef = useRef<HTMLButtonElement>(null);\r\n  const ColumnButtonStyleRef = useRef<HTMLButtonElement>(null);\r\n  const BarsButtonStyleRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [elementList, setElementList] = useState<\r\n    ElementList<HTMLButtonElement>\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    setElementList([\r\n      GridButtonStyleRef.current,\r\n      ColumnButtonStyleRef.current,\r\n      BarsButtonStyleRef.current,\r\n    ]);\r\n  }, []);\r\n\r\n  const { switchActiveClassBetweenElements } =\r\n    useActionListElement(elementList);\r\n  const { switchActiveClassBetweenElements: setGridActiveClass } =\r\n    useActionListElement([gridRef.current]);\r\n\r\n  const handleButtonStyleClick = (\r\n    actionPressedType: \"bars\" | \"grid\" | \"column\"\r\n  ) => {\r\n    if (actionPressedType === \"bars\") {\r\n      switchActiveClassBetweenElements(\"bars\", \"active-style\");\r\n      switchClassesElement([\"bars\", \"grid\", \"column\"], \"bars\", gridRef.current);\r\n      // BarsButtonStyleRef.current?.classList.add(\"active-style\");\r\n      // GridButtonStyleRef.current?.classList.remove(\"active-style\");\r\n      // ColumnButtonStyleRef.current?.classList.remove(\"active-style\");\r\n    } else if (actionPressedType === \"grid\") {\r\n      // GridButtonStyleRef.current?.classList.add(\"active-style\");\r\n      // BarsButtonStyleRef.current?.classList.remove(\"active-style\");\r\n      // ColumnButtonStyleRef.current?.classList.remove(\"active-style\");\r\n      switchActiveClassBetweenElements(\"grid\", \"active-style\");\r\n      switchClassesElement([\"bars\", \"grid\", \"column\"], \"grid\", gridRef.current);\r\n    } else {\r\n      // ColumnButtonStyleRef.current?.classList.add(\"active-style\");\r\n      // GridButtonStyleRef.current?.classList.remove(\"active-style\");\r\n      // BarsButtonStyleRef.current?.classList.remove(\"active-style\");\r\n      switchActiveClassBetweenElements(\"column\", \"active-style\");\r\n      switchClassesElement(\r\n        [\"bars\", \"grid\", \"column\"],\r\n        \"column\",\r\n        gridRef.current\r\n      );\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    GridButtonStyleRef.current?.classList.add(\"active-style\");\r\n    gridRef.current?.classList.add(\"grid\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"view-style-buttons\">\r\n      <button\r\n        id=\"bars\"\r\n        ref={BarsButtonStyleRef}\r\n        onClick={() => handleButtonStyleClick(\"bars\")}\r\n      >\r\n        <BarsIcon />\r\n      </button>\r\n      <button\r\n        id=\"grid\"\r\n        ref={GridButtonStyleRef}\r\n        onClick={() => handleButtonStyleClick(\"grid\")}\r\n      >\r\n        <GridIcon />\r\n      </button>\r\n      <button\r\n        id=\"column\"\r\n        ref={ColumnButtonStyleRef}\r\n        onClick={() => handleButtonStyleClick(\"column\")}\r\n      >\r\n        <ColumnIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { CreateButton } from \"../CreateButton\";\r\nimport { NoDataComponent } from \"../NoDataComponent\";\r\nimport { DataGridItem } from \"./DataGridItem\";\r\nimport { StyleIcons } from \"./StyleIcons\";\r\nimport { DataType } from \"../../types\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const DataGrid = ({ data }: { data: DataType[] }) => {\r\n  const gridDataRef = useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 ? (\r\n        <>\r\n          <CreateButton />\r\n          <StyleIcons gridRef={gridDataRef} />\r\n          <div className=\"data-grid\" id=\"data-grid\" ref={gridDataRef}>\r\n            {data.map((item: DataType) => (\r\n              <DataGridItem {...item} key={item.id} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <NoDataComponent />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport { TODO_CONTEXT } from \"./components/context/ToDo-Context\";\nimport { Appbar } from \"./components/Appbar\";\nimport { CreateForm } from \"./components/CreateForm\";\nimport { DataGrid } from \"./components/Grid/DataGrid\";\nimport { getData } from \"./helpers/getData\";\nimport { DataType } from \"./types\";\n\nexport default function ToDo() {\n  const [generalData, setGeneralData] = useState<DataType[]>([]);\n  const [newCreation, setNewCreation] = useState<{\n    type: \"notes\" | \"todos\" | \"\";\n    active: boolean;\n  }>({\n    type: \"\",\n    active: false,\n  });\n\n  useEffect(() => {\n    setGeneralData(getData());\n  }, []);\n\n  return (\n    <TODO_CONTEXT.Provider\n      value={{\n        generalData,\n        setGeneralData,\n        newCreation,\n        setNewCreation,\n      }}\n    >\n      <div>\n        <Appbar />\n        <div className=\"content\">\n          {!newCreation.active && <DataGrid data={generalData} />}\n\n          {newCreation.type === \"notes\" && <CreateForm type=\"notes\" />}\n          {newCreation.type === \"todos\" && <CreateForm type=\"todos\" />}\n        </div>\n      </div>\n    </TODO_CONTEXT.Provider>\n  );\n}\n","export const getData = () => {\r\n  const data = localStorage.getItem(\"dataStored\");\r\n  if (data !== null) {\r\n    return JSON.parse(data);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport ToDo from \"./ToDo\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<ToDo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}