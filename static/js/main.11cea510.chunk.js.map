{"version":3,"sources":["redux/reducers/authReducer.ts","redux/reducers/noteReducer.ts","redux/reducers/todoReducer.ts","redux/store/store.ts","redux/store/loadStore.ts","redux/store/saveState.ts","components/AuthAppbar.tsx","components/AuthContent.tsx","components/AuthForm/Form.tsx","components/AuthForm/Input.tsx","hooks/useForm.tsx","pages/Login.tsx","pages/Register.tsx","routers/AuthRouter.tsx","components/HamburgerIcon.tsx","components/Appbar.tsx","images/return-icon.tsx","images/times-circle-icon.tsx","components/CreateForm/CreateFormTools.tsx","components/CreateForm/CreateTodoForm.tsx","helpers/validateForm.ts","redux/actions/todoAction.ts","components/CreateForm/CreateNoteForm.tsx","redux/actions/noteAction.ts","pages/CreatePage.tsx","images/image-button.tsx","images/todo-task-button.tsx","components/CreateButton.tsx","components/Grid/DataGridNote.tsx","images/bars-icon.tsx","images/grid-icon.tsx","helpers/switchClassesElement.ts","components/Grid/StyleIcons.tsx","hooks/useActionListElement.ts","components/Grid/DataGridTodo.tsx","components/Grid/DataGrid.tsx","images/image-note.tsx","components/NoDataComponent.tsx","pages/Main.tsx","routers/TodoRoutes.tsx","routers/PrivateRoute.tsx","routers/PublicRoute.tsx","routers/AppRouter.tsx","ToDo.tsx","index.tsx"],"names":["initialState","isAuthenticated","user","authReducer","state","action","type","id","payload","name","token","noteReducer","todoReducer","initalStore","serializedState","localStorage","getItem","JSON","parse","error","console","loadStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","notes","todos","auth","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","AuthAppbar","className","AuthContent","children","Form","title","handleSubmit","onSubmit","e","preventDefault","Input","value","onInputChange","field","placeholder","onChange","target","useForm","form","useState","formState","setFormState","initalState","onReset","onResetField","Login","email","password","alert","to","Register","confirmPassword","AuthRouter","exact","path","component","HamburguerIcon","Appbar","ReturnIcon","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","TimesCircleIcon","CreateFormTools","handleActionClick","onClick","CreateTodoForm","tasks","setTasks","todoListTitle","todoTask","dispatch","useDispatch","history","useHistory","trim","length","task","completed","map","uuid","data","dataToValidate","undefined","filter","validateTodoForm","push","CreateNoteForm","noteTitle","noteText","validateNoteForm","CreatePage","ImageButton","TodoTaskButton","CreateButton","DataGridNote","note","data-data","split","slice","join","BarsIcon","GridIcon","switchClassesElement","classes","currentClass","element","callback","forEach","classList","add","remove","StyleIcons","gridRef","GridButtonStyleRef","useRef","ColumnButtonStyleRef","BarsButtonStyleRef","elementList","setElementList","useEffect","current","elementChildList","switchActiveClassBetweenElements","elementId","activeClass","el","handleButtonStyleClick","actionPressedType","useLayoutEffect","ref","DataGridTodo","todo","index","DataGrid","gridDataRef","log","item","key","ImageNote","NoDataComponent","Main","useSelector","TodoRoutes","PrivateRoute","Component","rest","props","PublicRoute","AppRouter","isLoggedIn","Todo","ReactDOM","render","document","getElementById"],"mappings":"mLAEMA,EAA0B,CAC9BC,iBAAiB,EACjBC,KAAM,MA8BOC,EA3BK,WAA2D,IAA1DC,EAAyD,uDAAjDJ,EAAcK,EAAmC,uCAC5E,OAAQA,EAAOC,MACb,IAAK,QACH,MAAO,CACLL,iBAAiB,EACjBC,KAAM,CACJK,GAAIF,EAAOG,QAAQN,KAAMK,GACzBE,KAAMJ,EAAOG,QAAQN,KAAMO,KAC3BC,MAAOL,EAAOG,QAAQN,KAAMQ,QAGlC,IAAK,SACH,MAAO,CAAET,iBAAiB,EAAOC,KAAM,MACzC,IAAK,WACH,MAAO,CACLD,iBAAiB,EACjBC,KAAM,CACJK,GAAIF,EAAOG,QAAQN,KAAMK,GACzBE,KAAMJ,EAAOG,QAAQN,KAAMO,KAC3BC,MAAOL,EAAOG,QAAQN,KAAMQ,QAGlC,QACE,OAAON,I,QCZEO,EAhBK,WAA8C,IAA7CP,EAA4C,uDAA5B,GAAIC,EAAwB,uCAC/D,OAAQA,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOG,UAE3B,IAAK,cAGL,IAAK,cAGL,QACE,OAAOJ,ICIEQ,EAhBK,WAA8C,IAA7CR,EAA4C,uDAA5B,GAAIC,EAAwB,uCAC/D,OAAQA,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOG,UAE3B,IAAK,cAGL,IAAK,cAGL,QACE,OAAOJ,ICAb,IAAMS,ECPS,WACb,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,kBAC7C,OAAwB,OAApBF,EACK,GAEAG,KAAKC,MAAMJ,GAEpB,MAAOK,GAEP,OADAC,QAAQD,MAAMA,GACP,IDHSE,GAEdC,EACe,qBAAXC,QACNA,OAAOC,sCACTC,IAEIC,EAAWC,YAAgB,CAC/BC,MAAOjB,EACPkB,MAAOjB,EACPkB,KAAM3B,IAGK4B,EAAQC,YACnBN,EACAb,EACAS,EAAiBW,YAAgBC,OAGnCH,EAAMI,WAAU,kBE1BD,SAAmB/B,GAChC,IACE,IAAMU,EAAkBG,KAAKmB,UAAUhC,GACvCW,aAAasB,QAAQ,iBAAkBvB,GACvC,MAAOK,GACPC,QAAQD,MAAMA,IFqBImB,CAAUP,EAAMQ,e,uCGjC/B,SAASC,IACd,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,YAAf,SACE,2CACW,8CCCZ,SAASC,EAAT,GAAmE,IAA5CC,EAA2C,EAA3CA,SAC5B,OACE,qBAAKF,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SAA+BE,MCA9B,SAASC,EAAT,GAKyB,IAJ9BtC,EAI6B,EAJ7BA,KACAqC,EAG6B,EAH7BA,SACAE,EAE6B,EAF7BA,MACAC,EAC6B,EAD7BA,aAEA,OACE,uBACEvC,GAAID,EACJmC,UAAU,YACVM,SAAU,SAACC,GACTA,EAAEC,iBACFH,KALJ,UAQE,oBAAIL,UAAU,cAAd,SAA6BI,IAC7B,qBAAKJ,UAAU,eAAf,SAA+BE,EAAS,KACxC,qBAAKF,UAAU,cAAf,SAA8BE,EAAS,QClBtC,SAASO,EAAT,GAMyB,IAL9BC,EAK6B,EAL7BA,MACAC,EAI6B,EAJ7BA,cACAC,EAG6B,EAH7BA,MACA/C,EAE6B,EAF7BA,KACAgD,EAC6B,EAD7BA,YAEA,OACE,uBACEhD,KAAMA,GAAc,OACpBC,GAAI8C,EACJF,MAAOA,EACPG,YAAaA,GAA4B,GACzCC,SAAU,gBAAaJ,EAAb,EAAGK,OAAUL,MAAb,OAA2BC,EAAcD,EAAOE,M,mBCnBnDI,EAAU,SAAmBC,GAAa,IAAD,EAClBC,mBAASD,GADS,mBAC7CE,EAD6C,KAClCC,EADkC,KAE9CC,EAAcJ,EAoBpB,OAAO,2BACFE,GADL,IAEExD,MAAOwD,EACPR,cArBoB,SAACD,EAAeE,GACpCQ,EAAa,2BACRD,GADO,kBAETP,EAAQF,MAmBXY,QAfc,WACdF,EAAaC,IAebE,aAZmB,SAACX,GACpBQ,EAAa,2BACRD,GADO,kBAETP,EAAQS,EAAYT,UCZpB,SAASY,IAAqB,MAGQR,EAAQ,CACjDS,MAAO,GACPC,SAAU,KAFJf,EAH2B,EAG3BA,cAAec,EAHY,EAGZA,MAAOC,EAHK,EAGLA,SAS9B,OACE,eAACzB,EAAD,WACE,eAACE,EAAD,CACEtC,KAAK,WACLuC,MAAM,sBACNC,aATe,WACnBsB,MAAM,sCAKJ,UAKE,qCACE,cAAClB,EAAD,CACEC,MAAOe,EACPd,cAAeA,EACfC,MAAM,QACNC,YAAY,WAEd,cAACJ,EAAD,CACEC,MAAOgB,EACPf,cAAeA,EACfC,MAAM,WACN/C,KAAK,WACLgD,YAAY,gBAGhB,qCACE,iCACE,6CAEF,wDACyB,cAAC,IAAD,CAAMe,GAAG,iBAAT,sBAA0C,aAIvE,qBAAK5B,UAAU,mBAAf,SACE,oBAAIA,UAAU,gBC5Cf,IAAM6B,EAAe,WAAM,MAGkCb,EAAQ,CACxEhD,KAAM,GACNyD,MAAO,GACPC,SAAU,GACVI,gBAAiB,KAJXnB,EAHwB,EAGxBA,cAAec,EAHS,EAGTA,MAAOzD,EAHE,EAGFA,KAAM0D,EAHJ,EAGIA,SAAUI,EAHd,EAGcA,gBAW9C,OACE,eAAC7B,EAAD,WACE,eAACE,EAAD,CACEtC,KAAK,WACLuC,MAAM,oBACNC,aATe,WACnBsB,MAAM,sCAKJ,UAKE,qCACE,cAAClB,EAAD,CACEC,MAAO1C,EACP2C,cAAeA,EACfC,MAAM,OACNC,YAAY,cAEd,cAACJ,EAAD,CACEC,MAAOe,EACPd,cAAeA,EACfC,MAAM,QACNC,YAAY,gBAEd,cAACJ,EAAD,CACEC,MAAOgB,EACPf,cAAeA,EACfC,MAAM,WACN/C,KAAK,WACLgD,YAAY,oBAEd,cAACJ,EAAD,CACEC,MAAOoB,EACPnB,cAAeA,EACfC,MAAM,kBACN/C,KAAK,WACLgD,YAAY,6BAGhB,qCACE,iCACE,6CAEF,0DAC2B,cAAC,IAAD,CAAMe,GAAG,cAAT,sBAAuC,aAItE,qBAAK5B,UAAU,mBAAf,SACE,oBAAIA,UAAU,iBC9DT+B,EAAa,WACxB,OACE,qCACE,cAAChC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,cAAcC,UAAWV,IAC3C,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,iBAAiBC,UAAWL,IAC9C,cAAC,IAAD,CAAUD,GAAG,uBCZRO,EAAiB,WAC5B,OACE,qBAAKnC,UAAU,iBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,eCJVoC,EAAS,WACpB,OACE,qBAAKpC,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,gDCPD,IAAMqC,EAAa,WACxB,OACE,qBACEC,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,WACVzC,UAAU,cACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,wiBCdGC,EAAkB,WAC7B,OACE,qBACET,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,eACVzC,UAAU,oBACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,4dCVGE,EAAkB,SAAC,GAMzB,IALLnF,EAKI,EALJA,KACAoF,EAII,EAJJA,kBAKA,OACE,sBAAKjD,UAAU,eAAf,UACE,yBAAQA,UAAU,cAAckD,QAAS,kBAAMD,EAAkB,SAAjE,UACE,cAAC,EAAD,IACA,4CAAwB,SAATpF,EAAkB,OAAS,cAE5C,yBACEmC,UAAU,cACVkD,QAAS,kBAAMD,EAAkB,WAFnC,UAIE,cAAC,EAAD,IACA,8CAA0B,SAATpF,EAAkB,OAAS,kB,QCZvCsF,EAAiB,WAAO,IAAD,EACRjC,mBAAqB,IADb,mBAC3BkC,EAD2B,KACpBC,EADoB,OAGhCrC,EAAQ,CACNsC,cAAe,GACfC,SAAU,KAHND,EAF0B,EAE1BA,cAAeC,EAFW,EAEXA,SAAU5C,EAFC,EAEDA,cAAeY,EAFd,EAEcA,aAAcD,EAF5B,EAE4BA,QAMxDkC,EAAWC,cACXC,EAAUC,cA4BhB,OACE,sBAAK3D,UAAU,cAAf,UACE,uBACEnC,KAAK,OACLmC,UAAU,oBACVa,YAAY,uBACZH,MAAO4C,EACPxC,SAAU,gBAAaJ,EAAb,EAAGK,OAAUL,MAAb,OACRC,EAAcD,EAAO,oBAGzB,uBACE7C,KAAK,OACLgD,YAAY,uBACZH,MAAO6C,EACPzC,SAAU,gBAAaJ,EAAb,EAAGK,OAAUL,MAAb,OAA2BC,EAAcD,EAAO,eAE5D,wBAAQwC,QA3CU,WAChBK,EAASK,OAAOC,OAAS,GAC3BR,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,KAAMP,EAAUQ,WAAW,MAEnDxC,EAAa,aAuCX,2BACA,oBAAIvB,UAAU,aAAd,SACGoD,EAAMY,KAAI,SAACF,GAAD,OACT,6BAAkBtF,KAAKmB,UAAUmE,IAAxBG,oBAGb,cAAC,EAAD,CAAiBhB,kBA1CA,SAACrF,GACpB,GAAe,SAAXA,EAAmB,CACrB,IAAMsG,EAAa,CACjB9D,MAAOkD,EACPzF,KAAM,OACNqG,KAAMd,IChBP,SAA0Bc,GAC/B,IAKsBd,EALhBe,EAAiB,CACrB/D,MAAO8D,EAAK9D,MAAMwD,OAClBM,KAAMA,EAAKA,KAAKF,KAAI,SAAClB,GAAD,OAAOA,EAAEgB,KAAKF,WAOpC,YAA6BQ,IAAzBD,EAAe/D,OAAgD,KAAzB+D,EAAe/D,UAJnCgD,EAMEe,EAAeD,KAL9Bd,EAAMiB,QAAO,SAACP,GAAD,OAAUA,EAAKD,OAAS,MAKDA,OAAS,IDM9BS,CAAiBJ,KAEnCV,EEnC6C,CACnD3F,KAAM,WACNE,QFiCuBmG,IACjB5C,IACAoC,EAAQa,KAAK,WAGfjD,IACAoC,EAAQa,KAAK,MA2BqC1G,KAAK,aG9DhD2G,EAAiB,WAAO,IAAD,EACsBxD,EAAQ,CAC9DyD,UAAW,GACXC,SAAU,KAFJD,EAD0B,EAC1BA,UAAWC,EADe,EACfA,SAAU/D,EADK,EACLA,cAAeW,EADV,EACUA,QAKtCkC,EAAWC,cAEXC,EAAUC,cAyBhB,OACE,sBAAK3D,UAAU,cAAf,UACE,uBACEnC,KAAK,OACLmC,UAAU,oBACVa,YAAY,uBACZH,MAAO+D,EACP3D,SAAU,gBAAaJ,EAAb,EAAGK,OAAUL,MAAb,OAA2BC,EAAcD,EAAO,gBAE5D,0BACE1C,KAAK,GACL6C,YAAY,sBACZH,MAAOgE,EACP5D,SAAU,gBAAaJ,EAAb,EAAGK,OAAUL,MAAb,OAA2BC,EAAcD,EAAO,eAE5D,cAAC,EAAD,CAAiBuC,kBAtCA,SAACrF,GACpB,GAAe,SAAXA,EAAmB,CACrB,IAAMsG,EAAa,CACjB9D,MAAOqE,EACPP,KAAMQ,EACN7G,KAAM,SFrBP,SAA0BqG,GAC/B,IAAMC,EACGD,EAAK9D,MAAMwD,OADdO,EAEED,EAAKA,KAAKN,OAGlB,YAA6BQ,IAAzBD,GAA+D,KAAzBA,KAE/BA,EAAoBN,OAAS,IEehBc,CAAiBT,KAEnCV,ECzB6C,CACnD3F,KAAM,WACNE,QDuBuBmG,IACjB5C,IACAoC,EAAQa,KAAK,WAGfjD,IACAoC,EAAQa,KAAK,MAuBqC1G,KAAK,aEpD9C,SAAS+G,EAAT,GACb,MAAgB,SADiD,EAA9B/G,KACV,cAAC,EAAD,IAAqB,cAAC,EAAD,ICLzC,IAAMgH,EAAc,WACzB,OACE,qBACEvC,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,QACVzC,UAAU,uBACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,maCdGgC,EAAiB,WAC5B,OACE,qBACExC,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,eACVzC,UAAU,6BACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,4aCVGiC,EAAe,WAC1B,IAAMrB,EAAUC,cAEhB,OACE,sBAAK3D,UAAU,cAAf,UACE,uBACEnC,KAAK,OACLgD,YAAY,oBACZqC,QAAS,kBAAMQ,EAAQa,KAAK,mBAE9B,sBAAKvE,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,4BAA4B4B,GAAG,eAA/C,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAM5B,UAAU,8BAA8B4B,GAAG,UAAjD,SACE,cAAC,EAAD,aCjBGoD,EAAe,SAAC,GAAqC,IAAnC5E,EAAkC,EAAlCA,MAAa6E,EAAqB,EAA3Bf,KAAYpG,EAAe,EAAfA,GAChD,OACE,sBAAKkC,UAAU,sBAAsBkF,YAAWpH,EAAhD,UACE,+BAAOsC,IACP,8BACG6E,EAAKE,MAAM,KAAKC,MAAM,EAAG,IAAIC,KAAK,KAClCJ,EAAKE,MAAM,KAAKtB,OAAS,IAAM,aCR3ByB,EAAW,WACtB,OACE,qBACEhD,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,OACVzC,UAAU,YACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,6VCdGyC,EAAW,WACtB,OACE,qBACEjD,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,aACVzC,UAAU,YACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,iLCdH,SAAS0C,EACdC,EACAC,EACAC,EACAC,GAEAH,EAAQI,SAAQ,SAAC7F,GACXA,IAAc0F,EACT,OAAPC,QAAO,IAAPA,KAASG,UAAUC,IAAI/F,GAEhB,OAAP2F,QAAO,IAAPA,KAASG,UAAUE,OAAOhG,MAG1B4F,GAAUA,ICNT,IAAMK,EAAa,SAAC,GAIpB,IAHLC,EAGI,EAHJA,QAIMC,EAAqBC,iBAA0B,MAC/CC,EAAuBD,iBAA0B,MACjDE,EAAqBF,iBAA0B,MAHjD,EAKkClF,mBAEpC,IAPE,mBAKGqF,EALH,KAKgBC,EALhB,KASJC,qBAAU,WACRD,EAAe,CACbL,EAAmBO,QACnBL,EAAqBK,QACrBJ,EAAmBI,YAEpB,IAfC,ICRJC,EDyBQC,GCzBRD,ED0BuBJ,ECThB,CACLK,iCAhBuC,SACvCC,EACAC,EACAlB,GAEAe,EAAiBd,SAAQ,SAACkB,IAClB,OAAFA,QAAE,IAAFA,OAAA,EAAAA,EAAIjJ,MAAO+I,EACbE,EAAGjB,UAAUC,IAAIe,GAEf,OAAFC,QAAE,IAAFA,KAAIjB,UAAUE,OAAOc,MAGrBlB,GAAUA,ODWRgB,iCAGFI,EAAyB,SAACC,GACJ,SAAtBA,GACFL,EAAiC,OAAQ,gBAEzCpB,EAAqB,CAAC,OAAQ,QAAS,OAAQU,EAAQQ,UACxB,SAAtBO,IACTL,EAAiC,OAAQ,gBAEzCpB,EAAqB,CAAC,OAAQ,QAAS,OAAQU,EAAQQ,WAS3D,OALAQ,2BAAgB,WAAO,IAAD,IACpB,UAAAf,EAAmBO,eAAnB,SAA4BZ,UAAUC,IAAI,gBAC1C,UAAAG,EAAQQ,eAAR,SAAiBZ,UAAUC,IAAI,UAC9B,CAACG,IAGF,sBAAKlG,UAAU,qBAAf,UACE,wBACElC,GAAG,OACHqJ,IAAKb,EACLpD,QAAS,kBAAM8D,EAAuB,SAHxC,SAKE,cAAC,EAAD,MAEF,wBACElJ,GAAG,OACHqJ,IAAKhB,EACLjD,QAAS,kBAAM8D,EAAuB,SAHxC,SAKE,cAAC,EAAD,UE5DKI,EAAe,SAAC,GAAsC,IAApChH,EAAmC,EAAnCA,MAAahB,EAAsB,EAA5B8E,KAAapG,EAAe,EAAfA,GACjD,OACE,sBAAKkC,UAAU,sBAAsBkF,YAAWpH,EAAhD,UACE,+BAAOsC,IACP,6BACGhB,EAAMyE,OAAS,EACZzE,EAAMgG,MAAM,EAAG,GAAGpB,KAAI,SAACqD,EAAMC,GAAP,OAAiB,6BAAiBD,GAARC,MAChDlI,EAAM4E,KAAI,SAACqD,EAAMC,GAAP,OAAiB,6BAAiBD,GAARC,YCCnCC,EAAW,SAAC,GAA6B,IAA3BrD,EAA0B,EAA1BA,KACnBsD,EAAcpB,iBAAuB,MAM3C,OAJAK,qBAAU,WACR9H,QAAQ8I,IAAI,MACX,IAGD,qCACE,cAAC,EAAD,CAAYvB,QAASsB,IACrB,qBAAKxH,UAAU,iBAAiBlC,GAAG,YAAYqJ,IAAKK,EAApD,SACGtD,EAAKF,KAAI,SAAC0D,GAAD,MACM,SAAdA,EAAK7J,KACH,wBAAC,EAAD,2BAAkB6J,GAAlB,IAAwBC,IAAKD,EAAK5J,MAElC,wBAAC,EAAD,2BAAkB4J,GAAlB,IAAwBC,IAAKD,EAAK5J,eCzBjC8J,EAAY,WACvB,OACE,qBACEtF,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,cACVzC,UAAU,aACV0C,KAAK,MACLC,MAAM,6BACNC,QAAQ,cARV,SAUE,sBACEC,KAAK,eACLC,EAAE,mMCXG+E,EAAkB,WAC7B,OACE,qCACE,sBAAK7H,UAAU,WAAf,UACE,cAAC,EAAD,IACA,+DAEF,cAAC,EAAD,QCJS,SAAS8H,IACtB,IAAM3I,EAAQ4I,aACZ,SAACpK,GAAD,OAA6CA,EAAMwB,SAErD,OACE,qBAAKa,UAAU,UAAf,SACoB,IAAjBb,EAAM0E,OACL,cAAC,EAAD,IAEA,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUK,KAAM/E,SCXnB,IAAM6I,GAAiB,WAC5B,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO/F,KAAK,eAAeD,OAAK,EAAhC,SACE,cAAC4C,EAAD,CAAY/G,KAAK,WAEnB,cAAC,IAAD,CAAOoE,KAAK,eAAeD,OAAK,EAAhC,SACE,cAAC4C,EAAD,CAAY/G,KAAK,WAEnB,cAAC,IAAD,CAAOoE,KAAK,IAAIC,UAAW4F,EAAM9F,OAAK,IACtC,cAAC,IAAD,CAAUJ,GAAG,a,SCdRqG,GAAwC,SAAC,GAI/C,IAHLzK,EAGI,EAHJA,gBACW0K,EAEP,EAFJhG,UACGiG,EACC,gDACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEjG,UAAW,SAACkG,GAAD,OACT5K,EACE,cAAC0K,EAAD,eAAeE,IAEf,cAAC,IAAD,CAAUxG,GAAG,qBCZVyG,GAAuC,SAAC,GAI9C,IAHL7K,EAGI,EAHJA,gBACW0K,EAEP,EAFJhG,UACGiG,EACC,gDACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEjG,UAAW,SAACkG,GAAD,OACT5K,EAAkB,cAAC,IAAD,CAAUoE,GAAG,MAAS,cAACsG,EAAD,eAAeE,SCNlDE,GAAY,WAAO,IAAD,EACOpH,oBAAkB,GADzB,mBACtBqH,EADsB,UAG7B,OACE,cAAC,IAAD,UACE,mCACE,eAAC,IAAD,WACE,cAAC,GAAD,CACEtG,KAAK,QACLC,UAAWH,EACXvE,gBAAiB+K,IAEnB,cAAC,GAAD,CACErG,UAAW8F,GACXxK,gBAAiB+K,EACjBtG,KAAK,IACLD,OAAK,IAEP,cAAC,IAAD,CAAUJ,GAAG,wBCrBR,SAAS4G,KACtB,OACE,cAAC,IAAD,CAAUlJ,MAAOA,EAAjB,SACE,cAAC,GAAD,M,MCHNmJ,IAASC,OAAO,cAAC,GAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.11cea510.chunk.js","sourcesContent":["import { AuthReducer, AuthState } from \"../../types\";\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n};\n\nconst authReducer = (state = initialState, action: AuthReducer): AuthState => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        isAuthenticated: true,\n        user: {\n          id: action.payload.user!.id,\n          name: action.payload.user!.name,\n          token: action.payload.user!.token,\n        },\n      };\n    case \"LOGOUT\":\n      return { isAuthenticated: false, user: null };\n    case \"REGISTER\":\n      return {\n        isAuthenticated: true,\n        user: {\n          id: action.payload.user!.id,\n          name: action.payload.user!.name,\n          token: action.payload.user!.token,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { Note, NoteReducer } from \"../../types\";\n\nconst noteReducer = (state: Note[] = [], action: NoteReducer) => {\n  switch (action.type) {\n    case \"ADD_NOTE\":\n      return [...state, action.payload];\n\n    case \"REMOVE_NOTE\":\n      return state;\n\n    case \"UPDATE_NOTE\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default noteReducer;\n","import { Todo, TodoReducer } from \"../../types\";\n\nconst todoReducer = (state: Todo[] = [], action: TodoReducer) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [...state, action.payload];\n\n    case \"UPDATE_TODO\":\n      return state;\n\n    case \"REMOVE_TODO\":\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authReducer from \"../reducers/authReducer\";\nimport noteReducer from \"../reducers/noteReducer\";\nimport todoReducer from \"../reducers/todoReducer\";\nimport loadStore from \"./loadStore\";\nimport saveState from \"./saveState\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: typeof compose;\n  }\n}\n\nconst initalStore = loadStore();\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  notes: noteReducer,\n  todos: todoReducer,\n  auth: authReducer\n});\n\nexport const store = createStore(\n  reducers,\n  initalStore,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.subscribe(() => saveState(store.getState()));\n","import { Note, Todo } from \"../../types\";\n\ntype LoadState = {\n  notes: Array<Note>;\n  todos: Array<Todo>;\n};\n\nexport default function loadStore(): LoadState | {} {\n  try {\n    const serializedState = localStorage.getItem(\"todo_app-state\");\n    if (serializedState === null) {\n      return {};\n    } else {\n      return JSON.parse(serializedState);\n    }\n  } catch (error) {\n    console.error(error);\n    return {};\n  }\n}\n","import { Note, Todo } from \"../../types\";\n\ntype SaveStateParams = {\n  notes: Array<Note>;\n  todos: Array<Todo>;\n};\n\nexport default function saveState(state: SaveStateParams) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"todo_app-state\", serializedState);\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export function AuthAppbar(): JSX.Element {\n  return (\n    <div className=\"navbar\">\n      <div className=\"container\">\n        <h1>\n          ToDo App <small>v1</small>\n        </h1>\n      </div>\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\n\ninterface AuthContentProps {\n  children: ReactNode;\n}\n\nexport function AuthContent({ children }: AuthContentProps): JSX.Element {\n  return (\n    <div className=\"auth\">\n      <div className=\"auth-content\">{children}</div>\n    </div>\n  );\n}\n","import { ReactChild } from \"react\";\n\ninterface AuthFormProps {\n  type: \"register\" | \"login\";\n  children: [ReactChild, ReactChild];\n  title: string;\n  handleSubmit(): void;\n}\n\nexport function Form({\n  type,\n  children,\n  title,\n  handleSubmit,\n}: AuthFormProps): JSX.Element {\n  return (\n    <form\n      id={type}\n      className=\"auth-form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <h2 className=\"form-header\">{title}</h2>\n      <div className=\"form-content\">{children[0]}</div>\n      <div className=\"form-footer\">{children[1]}</div>\n    </form>\n  );\n}\n","interface InputProps<F extends string> {\n  type?: \"password\" | \"email\" | \"text\";\n  value: string;\n  field: F;\n  placeholder?: string;\n  onInputChange: (value: string, field: F) => void;\n}\n\nexport function Input<F extends string>({\n  value,\n  onInputChange,\n  field,\n  type,\n  placeholder,\n}: InputProps<F>): JSX.Element {\n  return (\n    <input\n      type={type ? type : \"text\"}\n      id={field}\n      value={value}\n      placeholder={placeholder ? placeholder : \"\"}\n      onChange={({ target: { value } }) => onInputChange(value, field)}\n    />\n  );\n}\n","import { useState } from \"react\";\n\nexport const useForm = <T extends Object>(form: T) => {\n  const [formState, setFormState] = useState(form);\n  const initalState = form;\n\n  const onInputChange = (value: string, field: keyof T) => {\n    setFormState({\n      ...formState,\n      [field]: value,\n    });\n  };\n\n  const onReset = () => {\n    setFormState(initalState);\n  };\n\n  const onResetField = (field: keyof T) => {\n    setFormState({\n      ...formState,\n      [field]: initalState[field],\n    });\n  };\n\n  return {\n    ...formState,\n    state: formState,\n    onInputChange,\n    onReset,\n    onResetField,\n  };\n};\n","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContent } from \"../components/AuthContent\";\n// import { useDispatch } from \"react-redux\";\nimport { Form } from \"../components/AuthForm/Form\";\nimport { Input } from \"../components/AuthForm/Input\";\nimport { useForm } from \"../hooks/useForm\";\n\nexport function Login(): JSX.Element {\n  // const dispatch = useDispatch();\n\n  const { onInputChange, email, password } = useForm({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleSubmit = () => {\n    alert(\"jeeeejejejjejej aún no está\");\n  };\n\n  return (\n    <AuthContent>\n      <Form\n        type=\"register\"\n        title=\"Access your account\"\n        handleSubmit={handleSubmit}\n      >\n        <>\n          <Input\n            value={email}\n            onInputChange={onInputChange}\n            field=\"email\"\n            placeholder=\"E-mail\"\n          />\n          <Input\n            value={password}\n            onInputChange={onInputChange}\n            field=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </>\n        <>\n          <button>\n            <span>Sign In</span>\n          </button>\n          <p>\n            Don't have an account? <Link to=\"/auth/register\">Sign up!</Link>{\" \"}\n          </p>\n        </>\n      </Form>\n      <div className=\"auth-form-errors\">\n        <ul className=\"errors\"></ul>\n      </div>\n    </AuthContent>\n  );\n}\n","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContent } from \"../components/AuthContent\";\n// import { useDispatch } from \"react-redux\";\nimport { Form } from \"../components/AuthForm/Form\";\nimport { Input } from \"../components/AuthForm/Input\";\nimport { useForm } from \"../hooks/useForm\";\n\nexport const Register: FC = () => {\n  // const dispatch = useDispatch();\n\n  const { onInputChange, email, name, password, confirmPassword } = useForm({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleSubmit = () => {\n    alert(\"jeeeejejejjejej aún no está\");\n  };\n\n  return (\n    <AuthContent>\n      <Form\n        type=\"register\"\n        title=\"Create an account\"\n        handleSubmit={handleSubmit}\n      >\n        <>\n          <Input\n            value={name}\n            onInputChange={onInputChange}\n            field=\"name\"\n            placeholder=\"Your name\"\n          />\n          <Input\n            value={email}\n            onInputChange={onInputChange}\n            field=\"email\"\n            placeholder=\"Your e-mail\"\n          />\n          <Input\n            value={password}\n            onInputChange={onInputChange}\n            field=\"password\"\n            type=\"password\"\n            placeholder=\"Type a password\"\n          />\n          <Input\n            value={confirmPassword}\n            onInputChange={onInputChange}\n            field=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"Confirm your password\"\n          />\n        </>\n        <>\n          <button>\n            <span>Sign Up</span>\n          </button>\n          <p>\n            Already have an account? <Link to=\"/auth/login\">Sign in!</Link>{\" \"}\n          </p>\n        </>\n      </Form>\n      <div className=\"auth-form-errors\">\n        <ul className=\"errors\"></ul>\n      </div>\n    </AuthContent>\n  );\n};\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport { AuthAppbar } from \"../components/AuthAppbar\";\nimport { Login } from \"../pages/Login\";\nimport { Register } from \"../pages/Register\";\n\nexport const AuthRouter = () => {\n  return (\n    <>\n      <AuthAppbar />\n      <Switch>\n        <Route exact path=\"/auth/login\" component={Login} />\n        <Route exact path=\"/auth/register\" component={Register} />\n        <Redirect to=\"/auth/login\" />\n      </Switch>\n    </>\n  );\n};\n","export const HamburguerIcon = () => {\n  return (\n    <div className=\"hamburger-icon\">\n      <div className=\"hamburger-container\">\n        <div className=\"line\"></div>\n        <div className=\"line\"></div>\n        <div className=\"line\"></div>\n      </div>\n    </div>\n  );\n};\n","import { HamburguerIcon } from \"./HamburgerIcon\";\n\nexport const Appbar = () => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"container\">\n        <HamburguerIcon />\n        <h1>ToDo App</h1>\n      </div>\n    </div>\n  );\n};\n","export const ReturnIcon = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"undo-alt\"\n      className=\"return-icon\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"\n      ></path>\n    </svg>\n  );\n};\n","export const TimesCircleIcon = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"far\"\n      data-icon=\"times-circle\"\n      className=\"times-circle-icon\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\n      ></path>\n    </svg>\n  );\n};\n","import { ReturnIcon } from \"../../images/return-icon\";\nimport { TimesCircleIcon } from \"../../images/times-circle-icon\";\nimport { ActionType } from \"../../types\";\n\nexport const CreateFormTools = ({\n  type,\n  handleActionClick,\n}: {\n  handleActionClick: (action: \"save\" | \"cancel\") => void;\n  type: ActionType;\n}) => {\n  return (\n    <div className=\"tool-buttons\">\n      <button className=\"tool-button\" onClick={() => handleActionClick(\"save\")}>\n        <ReturnIcon />\n        <span>Guardar {type === \"note\" ? \"nota\" : \"lista\"}</span>\n      </button>\n      <button\n        className=\"tool-button\"\n        onClick={() => handleActionClick(\"cancel\")}\n      >\n        <TimesCircleIcon />\n        <span>Descartar {type === \"note\" ? \"nota\" : \"lista\"}</span>\n      </button>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { validateTodoForm } from \"../../helpers/validateForm\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { Todo, TodoTask } from \"../../types\";\nimport { CreateFormTools } from \"./CreateFormTools\";\nimport { v4 as uuid } from \"uuid\";\nimport { addTodo } from \"../../redux/actions/todoAction\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const CreateTodoForm = () => {\n  const [tasks, setTasks] = useState<TodoTask[]>([]);\n  const { todoListTitle, todoTask, onInputChange, onResetField, onReset } =\n    useForm({\n      todoListTitle: \"\",\n      todoTask: \"\",\n    });\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleAddTask = () => {\n    if (todoTask.trim().length > 0) {\n      setTasks([...tasks, { task: todoTask, completed: false }]);\n    }\n    onResetField(\"todoTask\");\n  };\n\n  const handleSubmit = (action: \"save\" | \"cancel\") => {\n    if (action === \"save\") {\n      const data: Todo = {\n        title: todoListTitle,\n        type: \"todo\",\n        data: tasks,\n      };\n      const isValidData = validateTodoForm(data);\n      if (isValidData) {\n        dispatch(addTodo(data));\n        onReset();\n        history.push(\"/\");\n      }\n    } else {\n      onReset();\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <div className=\"create-form\">\n      <input\n        type=\"text\"\n        className=\"create-form-title\"\n        placeholder=\"Escribe un título\"\n        value={todoListTitle}\n        onChange={({ target: { value } }) =>\n          onInputChange(value, \"todoListTitle\")\n        }\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Escribe una tarea...\"\n        value={todoTask}\n        onChange={({ target: { value } }) => onInputChange(value, \"todoTask\")}\n      />\n      <button onClick={handleAddTask}>Agregar tarea</button>\n      <ul className=\"tasks-list\">\n        {tasks.map((task) => (\n          <li key={uuid()}>{JSON.stringify(task)}</li>\n        ))}\n      </ul>\n      <CreateFormTools handleActionClick={handleSubmit} type=\"todo\" />\n    </div>\n  );\n};\n","import { Note, Todo } from \"../types\";\n\nexport function validateNoteForm(data: Note): boolean {\n  const dataToValidate = {\n    title: data.title.trim(),\n    data: data.data.trim(),\n  };\n\n  if (dataToValidate.title === undefined || dataToValidate.title === \"\") {\n    return false;\n  } else if (dataToValidate.data.length < 1) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function validateTodoForm(data: Todo): boolean {\n  const dataToValidate = {\n    title: data.title.trim(),\n    data: data.data.map((d) => d.task.trim()),\n  };\n\n  const validateTaks = (tasks: string[]) => {\n    return tasks.filter((task) => task.length < 1);\n  };\n\n  if (dataToValidate.title === undefined || dataToValidate.title === \"\") {\n    return false;\n  } else if (validateTaks(dataToValidate.data).length > 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n","import { Todo, TodoReducer } from \"../../types\";\n\nexport const addTodo = (note: Todo): TodoReducer => ({\n  type: \"ADD_TODO\",\n  payload: note,\n});\n\nexport const updateTodo = (note: Todo): TodoReducer => ({\n  type: \"UPDATE_TODO\",\n  payload: note,\n});\n\nexport const deleteTodo = (note: Todo): TodoReducer => ({\n  type: \"REMOVE_TODO\",\n  payload: note,\n});\n","import { useForm } from \"../../hooks/useForm\";\nimport { validateNoteForm } from \"../../helpers/validateForm\";\nimport { Note } from \"../../types\";\nimport { useHistory } from \"react-router-dom\";\nimport { addNote } from \"../../redux/actions/noteAction\";\nimport { useDispatch } from \"react-redux\";\nimport { CreateFormTools } from \"./CreateFormTools\";\n\nexport const CreateNoteForm = () => {\n  const { noteTitle, noteText, onInputChange, onReset } = useForm({\n    noteTitle: \"\",\n    noteText: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const handleSubmit = (action: \"save\" | \"cancel\") => {\n    if (action === \"save\") {\n      const data: Note = {\n        title: noteTitle,\n        data: noteText,\n        type: \"note\",\n      };\n      const isValidData = validateNoteForm(data);\n      if (isValidData) {\n        dispatch(addNote(data));\n        onReset();\n        history.push(\"/\");\n      }\n    } else {\n      onReset();\n      history.push(\"/\");\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log({ state });\n  // }, [state]);\n\n  return (\n    <div className=\"create-form\">\n      <input\n        type=\"text\"\n        className=\"create-form-title\"\n        placeholder=\"Escribe un título\"\n        value={noteTitle}\n        onChange={({ target: { value } }) => onInputChange(value, \"noteTitle\")}\n      />\n      <textarea\n        name=\"\"\n        placeholder=\"Escribe una nota...\"\n        value={noteText}\n        onChange={({ target: { value } }) => onInputChange(value, \"noteText\")}\n      ></textarea>\n      <CreateFormTools handleActionClick={handleSubmit} type=\"note\" />\n    </div>\n  );\n};\n","import { Note, NoteReducer } from \"../../types\";\n\nexport const addNote = (note: Note): NoteReducer => ({\n  type: \"ADD_NOTE\",\n  payload: note,\n});\n\nexport const updateNote = (note: Note): NoteReducer => ({\n  type: \"UPDATE_NOTE\",\n  payload: note,\n});\n\nexport const deleteNote = (note: Note): NoteReducer => ({\n  type: \"REMOVE_NOTE\",\n  payload: note,\n});\n","import { CreateTodoForm } from \"../components/CreateForm/CreateTodoForm\";\nimport { CreateNoteForm } from \"../components/CreateForm/CreateNoteForm\";\nimport { ActionType } from \"../types\";\n\nexport default function CreatePage({ type }: { type: ActionType }) {\n  return type === \"note\" ? <CreateNoteForm /> : <CreateTodoForm />;\n}\n","export const ImageButton = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"far\"\n      data-icon=\"image\"\n      className=\"images option-button\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"\n      ></path>\n    </svg>\n  );\n};\n","export const TodoTaskButton = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"far\"\n      data-icon=\"check-square\"\n      className=\"check-square option-button\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"\n      ></path>\n    </svg>\n  );\n};\n","import { Link, useHistory } from \"react-router-dom\";\nimport { ImageButton } from \"../images/image-button\";\nimport { TodoTaskButton } from \"../images/todo-task-button\";\n\nexport const CreateButton = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"create-note\">\n      <input\n        type=\"text\"\n        placeholder=\"Crear una nota...\"\n        onClick={() => history.push(\"/create/note\")}\n      />\n      <div className=\"option-buttons\">\n        <Link className=\"todo-button option-button\" to=\"/create/todo\">\n          <TodoTaskButton />\n        </Link>\n        <Link className=\"create-button option-button\" to=\"/create\">\n          <ImageButton />\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { Note } from \"../../types\";\n\nexport const DataGridNote = ({ title, data: note, id }: Note) => {\n  return (\n    <div className=\"data-grid-item note\" data-data={id}>\n      <span>{title}</span>\n      <p>\n        {note.split(\" \").slice(0, 22).join(\" \")}\n        {note.split(\" \").length > 22 && \"...\"}\n      </p>\n    </div>\n  );\n};\n","export const BarsIcon = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"bars\"\n      className=\"bars-icon\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n      ></path>\n    </svg>\n  );\n};\n","export const GridIcon = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"border-all\"\n      className=\"grid-icon\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 64v128H256V96zm-192 0v128H64V96zM64 416V288h128v128zm192 0V288h128v128z\"\n      ></path>\n    </svg>\n  );\n};\n","export function switchClassesElement<E extends HTMLElement | null>(\n  classes: string[],\n  currentClass: string,\n  element: E,\n  callback?: () => void\n) {\n  classes.forEach((className) => {\n    if (className === currentClass) {\n      element?.classList.add(className);\n    } else {\n      element?.classList.remove(className);\n    }\n  });\n  if (callback) callback();\n}\n","import React, { useLayoutEffect, useRef, useState, useEffect } from \"react\";\nimport { BarsIcon } from \"../../images/bars-icon\";\nimport { GridIcon } from \"../../images/grid-icon\";\nimport { switchClassesElement } from \"../../helpers/switchClassesElement\";\nimport { useActionListElement } from \"../../hooks/useActionListElement\";\nimport { ElementList } from \"../../types\";\n\nexport const StyleIcons = ({\n  gridRef,\n}: {\n  gridRef: React.RefObject<HTMLDivElement>;\n}) => {\n  const GridButtonStyleRef = useRef<HTMLButtonElement>(null);\n  const ColumnButtonStyleRef = useRef<HTMLButtonElement>(null);\n  const BarsButtonStyleRef = useRef<HTMLButtonElement>(null);\n\n  const [elementList, setElementList] = useState<\n    ElementList<HTMLButtonElement>\n  >([]);\n\n  useEffect(() => {\n    setElementList([\n      GridButtonStyleRef.current,\n      ColumnButtonStyleRef.current,\n      BarsButtonStyleRef.current,\n    ]);\n  }, []);\n\n  const { switchActiveClassBetweenElements } =\n    useActionListElement(elementList);\n\n  const handleButtonStyleClick = (actionPressedType: \"bars\" | \"grid\") => {\n    if (actionPressedType === \"bars\") {\n      switchActiveClassBetweenElements(\"bars\", \"active-style\");\n\n      switchClassesElement([\"bars\", \"grid\"], \"bars\", gridRef.current);\n    } else if (actionPressedType === \"grid\") {\n      switchActiveClassBetweenElements(\"grid\", \"active-style\");\n\n      switchClassesElement([\"bars\", \"grid\"], \"grid\", gridRef.current);\n    }\n  };\n\n  useLayoutEffect(() => {\n    GridButtonStyleRef.current?.classList.add(\"active-style\");\n    gridRef.current?.classList.add(\"grid\");\n  }, [gridRef]);\n\n  return (\n    <div className=\"view-style-buttons\">\n      <button\n        id=\"bars\"\n        ref={BarsButtonStyleRef}\n        onClick={() => handleButtonStyleClick(\"bars\")}\n      >\n        <BarsIcon />\n      </button>\n      <button\n        id=\"grid\"\n        ref={GridButtonStyleRef}\n        onClick={() => handleButtonStyleClick(\"grid\")}\n      >\n        <GridIcon />\n      </button>\n    </div>\n  );\n};\n","import { ElementList } from \"../types\";\n\nexport function useActionListElement<EL extends HTMLElement>(\n  elementChildList: ElementList<EL>\n) {\n  const switchActiveClassBetweenElements = (\n    elementId: string,\n    activeClass: string,\n    callback?: () => void\n  ) => {\n    elementChildList.forEach((el) => {\n      if (el?.id === elementId) {\n        el.classList.add(activeClass);\n      } else {\n        el?.classList.remove(activeClass);\n      }\n    });\n    if (callback) callback();\n  };\n\n  return {\n    switchActiveClassBetweenElements,\n  };\n}\n","import { Todo } from \"../../types\";\n\nexport const DataGridTodo = ({ title, data: todos, id }: Todo) => {\n  return (\n    <div className=\"data-grid-item todo\" data-data={id}>\n      <span>{title}</span>\n      <ul>\n        {todos.length > 3\n          ? todos.slice(0, 4).map((todo, index) => <li key={index}>{todo}</li>)\n          : todos.map((todo, index) => <li key={index}>{todo}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import { DataGridNote } from \"./DataGridNote\";\nimport { StyleIcons } from \"./StyleIcons\";\nimport { Note, Todo } from \"../../types\";\nimport { useEffect, useRef } from \"react\";\nimport { DataGridTodo } from \"./DataGridTodo\";\n\ninterface DataGridProps {\n  data: Note[] | Todo[];\n}\n\nexport const DataGrid = ({ data }: DataGridProps) => {\n  const gridDataRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    console.log(\"\");\n  }, []);\n\n  return (\n    <>\n      <StyleIcons gridRef={gridDataRef} />\n      <div className=\"data-grid grid\" id=\"data-grid\" ref={gridDataRef}>\n        {data.map((item) =>\n          item.type === \"note\" ? (\n            <DataGridNote {...item} key={item.id} />\n          ) : (\n            <DataGridTodo {...item} key={item.id} />\n          )\n        )}\n      </div>\n    </>\n  );\n};\n","export const ImageNote = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"sticky-note\"\n      className=\"note-image\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"\n      ></path>\n    </svg>\n  );\n};\n","import { ImageNote } from \"../images/image-note\";\nimport { CreateButton } from \"./CreateButton\";\n\nexport const NoDataComponent = () => {\n  return (\n    <>\n      <div className=\"no-notes\">\n        <ImageNote />\n        <p>Aún no hay notas creadas</p>\n      </div>\n      <CreateButton />\n    </>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { CreateButton } from \"../components/CreateButton\";\nimport { DataGrid } from \"../components/Grid/DataGrid\";\nimport { NoDataComponent } from \"../components/NoDataComponent\";\nimport { Note, Todo } from \"../types\";\n\nexport default function Main() {\n  const notes = useSelector(\n    (state: { notes: Note[]; todos: Todo[] }) => state.notes\n  );\n  return (\n    <div className=\"content\">\n      {notes.length === 0 ? (\n        <NoDataComponent />\n      ) : (\n        <>\n          <CreateButton />\n          <DataGrid data={notes} />\n        </>\n      )}\n    </div>\n  );\n}\n","import { FC } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Appbar } from \"../components/Appbar\";\nimport CreatePage from \"../pages/CreatePage\";\nimport Main from \"../pages/Main\";\n\nexport const TodoRoutes: FC = () => {\n  return (\n    <>\n      <Appbar />\n      <Switch>\n        <Route path=\"/create/note\" exact>\n          <CreatePage type=\"note\" />\n        </Route>\n        <Route path=\"/create/todo\" exact>\n          <CreatePage type=\"todo\" />\n        </Route>\n        <Route path=\"/\" component={Main} exact />\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ProtectedRouteProps } from \"../types\";\n\nexport const PrivateRoute: FC<ProtectedRouteProps> = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props: any) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/auth/login\" />\n        )\n      }\n    />\n  );\n};\n","import { FC } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { ProtectedRouteProps } from \"../types\";\n\nexport const PublicRoute: FC<ProtectedRouteProps> = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props: any) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n","import { useState } from \"react\";\nimport { Redirect, Switch, HashRouter } from \"react-router-dom\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { TodoRoutes } from \"./TodoRoutes\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n\n  return (\n    <HashRouter>\n      <>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n          <PrivateRoute\n            component={TodoRoutes}\n            isAuthenticated={isLoggedIn}\n            path=\"/\"\n            exact\n          />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </>\n    </HashRouter>\n  );\n};\n","import { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/store\";\nimport { AppRouter } from \"./routers/AppRouter\";\n\nexport default function Todo() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport ToDo from \"./ToDo\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<ToDo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}