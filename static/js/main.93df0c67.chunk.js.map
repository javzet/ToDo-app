{"version":3,"sources":["redux/reducers/authReducer.ts","redux/reducers/noteReducer.ts","redux/reducers/todoReducer.ts","redux/store/store.ts","redux/store/loadStore.ts","redux/store/saveState.ts","pages/Login.tsx","pages/Register.tsx","routers/AuthRouter.tsx","components/HamburgerIcon.tsx","components/Appbar.tsx","hooks/useForm.tsx","images/return-icon.tsx","images/times-circle-icon.tsx","components/CreateForm/CreateFormTools.tsx","components/CreateForm/CreateTodoForm.tsx","helpers/validateForm.ts","redux/actions/todoAction.ts","components/CreateForm/CreateNoteForm.tsx","redux/actions/noteAction.ts","pages/CreatePage.tsx","images/image-button.tsx","images/todo-task-button.tsx","components/CreateButton.tsx","components/Grid/DataGridNote.tsx","images/bars-icon.tsx","images/grid-icon.tsx","helpers/switchClassesElement.ts","components/Grid/StyleIcons.tsx","hooks/useActionListElement.ts","components/Grid/DataGridTodo.tsx","components/Grid/DataGrid.tsx","images/image-note.tsx","components/NoDataComponent.tsx","pages/Main.tsx","routers/TodoRoutes.tsx","routers/PrivateRoute.tsx","routers/PublicRoute.tsx","routers/AppRouter.tsx","ToDo.tsx","index.tsx"],"names":["authReducer","state","action","type","isAuthenticated","user","payload","noteReducer","todoReducer","initalStore","serializedState","localStorage","getItem","JSON","parse","error","console","loadStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","notes","todos","auth","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","Login","Register","useDispatch","a","data","email","password","axios","post","response","log","onClick","AuthRouter","exact","path","component","to","HamburguerIcon","className","Appbar","useForm","form","useState","formState","setFormState","initalState","onInputChange","value","field","onReset","onResetField","ReturnIcon","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","TimesCircleIcon","CreateFormTools","handleActionClick","CreateTodoForm","tasks","setTasks","todoListTitle","todoTask","dispatch","history","useHistory","placeholder","onChange","target","trim","length","task","completed","map","uuid","title","dataToValidate","undefined","filter","validateTodoForm","push","CreateNoteForm","noteTitle","noteText","name","validateNoteForm","CreatePage","ImageButton","TodoTaskButton","CreateButton","DataGridNote","note","id","data-data","split","slice","join","BarsIcon","GridIcon","switchClassesElement","classes","currentClass","element","callback","forEach","classList","add","remove","StyleIcons","gridRef","GridButtonStyleRef","useRef","ColumnButtonStyleRef","BarsButtonStyleRef","elementList","setElementList","useEffect","current","elementChildList","switchActiveClassBetweenElements","elementId","activeClass","el","handleButtonStyleClick","actionPressedType","useLayoutEffect","ref","DataGridTodo","todo","index","DataGrid","gridDataRef","item","key","ImageNote","NoDataComponent","Main","useSelector","TodoRoutes","PrivateRoute","Component","rest","props","PublicRoute","AppRouter","isLoggedIn","Todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93df0c67.chunk.js","sourcesContent":["import { AuthReducer } from \"../../types\";\r\n\r\ninterface AuthState {\r\n  isAuthenticated: boolean;\r\n  user: {\r\n    name: string;\r\n    id: string;\r\n  } | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n};\r\n\r\nconst authReducer = (state = {}, action: AuthReducer) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return { isAuthenticated: true, user: action.payload };\r\n    case \"LOGOUT\":\r\n      return { isAuthenticated: false, user: null };\r\n    case \"REGISTER\":\r\n      return { isAuthenticated: true, user: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { Note, NoteReducer } from \"../../types\";\r\n\r\nconst noteReducer = (state: Note[] = [], action: NoteReducer) => {\r\n  switch (action.type) {\r\n    case \"ADD_NOTE\":\r\n      return [...state, action.payload];\r\n\r\n    case \"REMOVE_NOTE\":\r\n      return state;\r\n\r\n    case \"UPDATE_NOTE\":\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default noteReducer;\r\n","import { Todo, TodoReducer } from \"../../types\";\r\n\r\nconst todoReducer = (state: Todo[] = [], action: TodoReducer) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [...state, action.payload];\r\n\r\n    case \"UPDATE_TODO\":\r\n      return state;\r\n\r\n    case \"REMOVE_TODO\":\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport noteReducer from \"../reducers/noteReducer\";\r\nimport todoReducer from \"../reducers/todoReducer\";\r\nimport loadStore from \"./loadStore\";\r\nimport saveState from \"./saveState\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: typeof compose;\r\n  }\r\n}\r\n\r\nconst initalStore = loadStore();\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  notes: noteReducer,\r\n  todos: todoReducer,\r\n  auth: authReducer\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  initalStore,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => saveState(store.getState()));\r\n","import { Note, Todo } from \"../../types\";\r\n\r\ntype LoadState = {\r\n  notes: Array<Note>;\r\n  todos: Array<Todo>;\r\n};\r\n\r\nexport default function loadStore(): LoadState | {} {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"todo_app-state\");\r\n    if (serializedState === null) {\r\n      return {};\r\n    } else {\r\n      return JSON.parse(serializedState);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return {};\r\n  }\r\n}\r\n","import { Note, Todo } from \"../../types\";\r\n\r\ntype SaveStateParams = {\r\n  notes: Array<Note>;\r\n  todos: Array<Todo>;\r\n};\r\n\r\nexport default function saveState(state: SaveStateParams) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"todo_app-state\", serializedState);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { FC } from \"react\";\r\n\r\nexport const Login: FC = () => {\r\n  return <>Login</>;\r\n};\r\n","import axios from \"axios\";\r\nimport { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mLogin } from \"../redux/actions/authAction\";\r\n\r\nexport const Register: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const a = async () => {\r\n    const data = { email: \"admin@todo.com\", password: \"admin\" };\r\n    const response = await axios.post(\r\n      \"https://todo-app-bkend.herokuapp.com/api/v1/login\",\r\n      data\r\n    );\r\n    console.log(response);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // dispatch(mLogin({ email: \"test@todo.com\", password: \"test\" }));\r\n    a();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      Register\r\n      <button onClick={handleClick}>Login</button>\r\n    </>\r\n  );\r\n};\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"../pages/Login\";\r\nimport { Register } from \"../pages/Register\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/auth/login\" component={Login} />\r\n        <Route exact path=\"/auth/register\" component={Register} />\r\n        <Redirect to=\"/auth/login\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","export const HamburguerIcon = () => {\r\n  return (\r\n    <div className=\"hamburger-icon\">\r\n      <div className=\"hamburger-container\">\r\n        <div className=\"line\"></div>\r\n        <div className=\"line\"></div>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { HamburguerIcon } from \"./HamburgerIcon\";\r\n\r\nexport const Appbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"container\">\r\n        <HamburguerIcon />\r\n        <h1>ToDo App</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = <T extends Object>(form: T) => {\r\n  const [formState, setFormState] = useState(form);\r\n  const initalState = form;\r\n\r\n  const onInputChange = (value: string, field: keyof T) => {\r\n    setFormState({\r\n      ...formState,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const onReset = () => {\r\n    setFormState(initalState);\r\n  };\r\n\r\n  const onResetField = (field: keyof T) => {\r\n    setFormState({\r\n      ...formState,\r\n      [field]: initalState[field],\r\n    });\r\n  };\r\n\r\n  return {\r\n    ...formState,\r\n    state: formState,\r\n    onInputChange,\r\n    onReset,\r\n    onResetField,\r\n  };\r\n};\r\n","export const ReturnIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"undo-alt\"\r\n      className=\"return-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const TimesCircleIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"far\"\r\n      data-icon=\"times-circle\"\r\n      className=\"times-circle-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import { ReturnIcon } from \"../../images/return-icon\";\r\nimport { TimesCircleIcon } from \"../../images/times-circle-icon\";\r\nimport { ActionType } from \"../../types\";\r\n\r\nexport const CreateFormTools = ({\r\n  type,\r\n  handleActionClick,\r\n}: {\r\n  handleActionClick: (action: \"save\" | \"cancel\") => void;\r\n  type: ActionType;\r\n}) => {\r\n  return (\r\n    <div className=\"tool-buttons\">\r\n      <button className=\"tool-button\" onClick={() => handleActionClick(\"save\")}>\r\n        <ReturnIcon />\r\n        <span>Guardar {type === \"note\" ? \"nota\" : \"lista\"}</span>\r\n      </button>\r\n      <button\r\n        className=\"tool-button\"\r\n        onClick={() => handleActionClick(\"cancel\")}\r\n      >\r\n        <TimesCircleIcon />\r\n        <span>Descartar {type === \"note\" ? \"nota\" : \"lista\"}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { validateTodoForm } from \"../../helpers/validateForm\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { Todo, TodoTask } from \"../../types\";\r\nimport { CreateFormTools } from \"./CreateFormTools\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { addTodo } from \"../../redux/actions/todoAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const CreateTodoForm = () => {\r\n  const [tasks, setTasks] = useState<TodoTask[]>([]);\r\n  const { todoListTitle, todoTask, onInputChange, onResetField, onReset } =\r\n    useForm({\r\n      todoListTitle: \"\",\r\n      todoTask: \"\",\r\n    });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleAddTask = () => {\r\n    if (todoTask.trim().length > 0) {\r\n      setTasks([...tasks, { task: todoTask, completed: false }]);\r\n    }\r\n    onResetField(\"todoTask\");\r\n  };\r\n\r\n  const handleSubmit = (action: \"save\" | \"cancel\") => {\r\n    if (action === \"save\") {\r\n      const data: Todo = {\r\n        title: todoListTitle,\r\n        type: \"todo\",\r\n        data: tasks,\r\n      };\r\n      const isValidData = validateTodoForm(data);\r\n      if (isValidData) {\r\n        dispatch(addTodo(data));\r\n        onReset();\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      onReset();\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-form\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"create-form-title\"\r\n        placeholder=\"Escribe un título\"\r\n        value={todoListTitle}\r\n        onChange={({ target: { value } }) =>\r\n          onInputChange(value, \"todoListTitle\")\r\n        }\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Escribe una tarea...\"\r\n        value={todoTask}\r\n        onChange={({ target: { value } }) => onInputChange(value, \"todoTask\")}\r\n      />\r\n      <button onClick={handleAddTask}>Agregar tarea</button>\r\n      <ul className=\"tasks-list\">\r\n        {tasks.map((task) => (\r\n          <li key={uuid()}>{JSON.stringify(task)}</li>\r\n        ))}\r\n      </ul>\r\n      <CreateFormTools handleActionClick={handleSubmit} type=\"todo\" />\r\n    </div>\r\n  );\r\n};\r\n","import { Note, Todo } from \"../types\";\r\n\r\nexport function validateNoteForm(data: Note): boolean {\r\n  const dataToValidate = {\r\n    title: data.title.trim(),\r\n    data: data.data.trim(),\r\n  };\r\n\r\n  if (dataToValidate.title === undefined || dataToValidate.title === \"\") {\r\n    return false;\r\n  } else if (dataToValidate.data.length < 1) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function validateTodoForm(data: Todo): boolean {\r\n  const dataToValidate = {\r\n    title: data.title.trim(),\r\n    data: data.data.map((d) => d.task.trim()),\r\n  };\r\n\r\n  const validateTaks = (tasks: string[]) => {\r\n    return tasks.filter((task) => task.length < 1);\r\n  };\r\n\r\n  if (dataToValidate.title === undefined || dataToValidate.title === \"\") {\r\n    return false;\r\n  } else if (validateTaks(dataToValidate.data).length > 0) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n","import { Todo, TodoReducer } from \"../../types\";\r\n\r\nexport const addTodo = (note: Todo): TodoReducer => ({\r\n  type: \"ADD_TODO\",\r\n  payload: note,\r\n});\r\n\r\nexport const updateTodo = (note: Todo): TodoReducer => ({\r\n  type: \"UPDATE_TODO\",\r\n  payload: note,\r\n});\r\n\r\nexport const deleteTodo = (note: Todo): TodoReducer => ({\r\n  type: \"REMOVE_TODO\",\r\n  payload: note,\r\n});\r\n","import { useForm } from \"../../hooks/useForm\";\r\nimport { validateNoteForm } from \"../../helpers/validateForm\";\r\nimport { Note } from \"../../types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addNote } from \"../../redux/actions/noteAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CreateFormTools } from \"./CreateFormTools\";\r\n\r\nexport const CreateNoteForm = () => {\r\n  const { noteTitle, noteText, onInputChange, onReset } = useForm({\r\n    noteTitle: \"\",\r\n    noteText: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (action: \"save\" | \"cancel\") => {\r\n    if (action === \"save\") {\r\n      const data: Note = {\r\n        title: noteTitle,\r\n        data: noteText,\r\n        type: \"note\",\r\n      };\r\n      const isValidData = validateNoteForm(data);\r\n      if (isValidData) {\r\n        dispatch(addNote(data));\r\n        onReset();\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      onReset();\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log({ state });\r\n  // }, [state]);\r\n\r\n  return (\r\n    <div className=\"create-form\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"create-form-title\"\r\n        placeholder=\"Escribe un título\"\r\n        value={noteTitle}\r\n        onChange={({ target: { value } }) => onInputChange(value, \"noteTitle\")}\r\n      />\r\n      <textarea\r\n        name=\"\"\r\n        placeholder=\"Escribe una nota...\"\r\n        value={noteText}\r\n        onChange={({ target: { value } }) => onInputChange(value, \"noteText\")}\r\n      ></textarea>\r\n      <CreateFormTools handleActionClick={handleSubmit} type=\"note\" />\r\n    </div>\r\n  );\r\n};\r\n","import { Note, NoteReducer } from \"../../types\";\r\n\r\nexport const addNote = (note: Note): NoteReducer => ({\r\n  type: \"ADD_NOTE\",\r\n  payload: note,\r\n});\r\n\r\nexport const updateNote = (note: Note): NoteReducer => ({\r\n  type: \"UPDATE_NOTE\",\r\n  payload: note,\r\n});\r\n\r\nexport const deleteNote = (note: Note): NoteReducer => ({\r\n  type: \"REMOVE_NOTE\",\r\n  payload: note,\r\n});\r\n","import { CreateTodoForm } from \"../components/CreateForm/CreateTodoForm\";\r\nimport { CreateNoteForm } from \"../components/CreateForm/CreateNoteForm\";\r\nimport { ActionType } from \"../types\";\r\n\r\nexport default function CreatePage({ type }: { type: ActionType }) {\r\n  return type === \"note\" ? <CreateNoteForm /> : <CreateTodoForm />;\r\n}\r\n","export const ImageButton = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"far\"\r\n      data-icon=\"image\"\r\n      className=\"images option-button\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const TodoTaskButton = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"far\"\r\n      data-icon=\"check-square\"\r\n      className=\"check-square option-button\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { ImageButton } from \"../images/image-button\";\r\nimport { TodoTaskButton } from \"../images/todo-task-button\";\r\n\r\nexport const CreateButton = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"create-note\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Crear una nota...\"\r\n        onClick={() => history.push(\"/create/note\")}\r\n      />\r\n      <div className=\"option-buttons\">\r\n        <Link className=\"todo-button option-button\" to=\"/create/todo\">\r\n          <TodoTaskButton />\r\n        </Link>\r\n        <Link className=\"create-button option-button\" to=\"/create\">\r\n          <ImageButton />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Note } from \"../../types\";\r\n\r\nexport const DataGridNote = ({ title, data: note, id }: Note) => {\r\n  return (\r\n    <div className=\"data-grid-item note\" data-data={id}>\r\n      <span>{title}</span>\r\n      <p>\r\n        {note.split(\" \").slice(0, 22).join(\" \")}\r\n        {note.split(\" \").length > 22 && \"...\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","export const BarsIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"bars\"\r\n      className=\"bars-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export const GridIcon = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"border-all\"\r\n      className=\"grid-icon\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 64v128H256V96zm-192 0v128H64V96zM64 416V288h128v128zm192 0V288h128v128z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","export function switchClassesElement<E extends HTMLElement | null>(\r\n  classes: string[],\r\n  currentClass: string,\r\n  element: E,\r\n  callback?: () => void\r\n) {\r\n  classes.forEach((className) => {\r\n    if (className === currentClass) {\r\n      element?.classList.add(className);\r\n    } else {\r\n      element?.classList.remove(className);\r\n    }\r\n  });\r\n  if (callback) callback();\r\n}\r\n","import React, { useLayoutEffect, useRef, useState, useEffect } from \"react\";\r\nimport { BarsIcon } from \"../../images/bars-icon\";\r\nimport { GridIcon } from \"../../images/grid-icon\";\r\nimport { switchClassesElement } from \"../../helpers/switchClassesElement\";\r\nimport { useActionListElement } from \"../../hooks/useActionListElement\";\r\nimport { ElementList } from \"../../types\";\r\n\r\nexport const StyleIcons = ({\r\n  gridRef,\r\n}: {\r\n  gridRef: React.RefObject<HTMLDivElement>;\r\n}) => {\r\n  const GridButtonStyleRef = useRef<HTMLButtonElement>(null);\r\n  const ColumnButtonStyleRef = useRef<HTMLButtonElement>(null);\r\n  const BarsButtonStyleRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const [elementList, setElementList] = useState<\r\n    ElementList<HTMLButtonElement>\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    setElementList([\r\n      GridButtonStyleRef.current,\r\n      ColumnButtonStyleRef.current,\r\n      BarsButtonStyleRef.current,\r\n    ]);\r\n  }, []);\r\n\r\n  const { switchActiveClassBetweenElements } =\r\n    useActionListElement(elementList);\r\n\r\n  const handleButtonStyleClick = (actionPressedType: \"bars\" | \"grid\") => {\r\n    if (actionPressedType === \"bars\") {\r\n      switchActiveClassBetweenElements(\"bars\", \"active-style\");\r\n\r\n      switchClassesElement([\"bars\", \"grid\"], \"bars\", gridRef.current);\r\n    } else if (actionPressedType === \"grid\") {\r\n      switchActiveClassBetweenElements(\"grid\", \"active-style\");\r\n\r\n      switchClassesElement([\"bars\", \"grid\"], \"grid\", gridRef.current);\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    GridButtonStyleRef.current?.classList.add(\"active-style\");\r\n    gridRef.current?.classList.add(\"grid\");\r\n  }, [gridRef]);\r\n\r\n  return (\r\n    <div className=\"view-style-buttons\">\r\n      <button\r\n        id=\"bars\"\r\n        ref={BarsButtonStyleRef}\r\n        onClick={() => handleButtonStyleClick(\"bars\")}\r\n      >\r\n        <BarsIcon />\r\n      </button>\r\n      <button\r\n        id=\"grid\"\r\n        ref={GridButtonStyleRef}\r\n        onClick={() => handleButtonStyleClick(\"grid\")}\r\n      >\r\n        <GridIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { ElementList } from \"../types\";\r\n\r\nexport function useActionListElement<EL extends HTMLElement>(\r\n  elementChildList: ElementList<EL>\r\n) {\r\n  const switchActiveClassBetweenElements = (\r\n    elementId: string,\r\n    activeClass: string,\r\n    callback?: () => void\r\n  ) => {\r\n    elementChildList.forEach((el) => {\r\n      if (el?.id === elementId) {\r\n        el.classList.add(activeClass);\r\n      } else {\r\n        el?.classList.remove(activeClass);\r\n      }\r\n    });\r\n    if (callback) callback();\r\n  };\r\n\r\n  return {\r\n    switchActiveClassBetweenElements,\r\n  };\r\n}\r\n","import { Todo } from \"../../types\";\r\n\r\nexport const DataGridTodo = ({ title, data: todos, id }: Todo) => {\r\n  return (\r\n    <div className=\"data-grid-item todo\" data-data={id}>\r\n      <span>{title}</span>\r\n      <ul>\r\n        {todos.length > 3\r\n          ? todos.slice(0, 4).map((todo, index) => <li key={index}>{todo}</li>)\r\n          : todos.map((todo, index) => <li key={index}>{todo}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import { DataGridNote } from \"./DataGridNote\";\r\nimport { StyleIcons } from \"./StyleIcons\";\r\nimport { Note, Todo } from \"../../types\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { DataGridTodo } from \"./DataGridTodo\";\r\n\r\ninterface DataGridProps {\r\n  data: Note[] | Todo[];\r\n}\r\n\r\nexport const DataGrid = ({ data }: DataGridProps) => {\r\n  const gridDataRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StyleIcons gridRef={gridDataRef} />\r\n      <div className=\"data-grid grid\" id=\"data-grid\" ref={gridDataRef}>\r\n        {data.map((item) =>\r\n          item.type === \"note\" ? (\r\n            <DataGridNote {...item} key={item.id} />\r\n          ) : (\r\n            <DataGridTodo {...item} key={item.id} />\r\n          )\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export const ImageNote = () => {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      focusable=\"false\"\r\n      data-prefix=\"fas\"\r\n      data-icon=\"sticky-note\"\r\n      className=\"note-image\"\r\n      role=\"img\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 448 512\"\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n","import { ImageNote } from \"../images/image-note\";\r\nimport { CreateButton } from \"./CreateButton\";\r\n\r\nexport const NoDataComponent = () => {\r\n  return (\r\n    <>\r\n      <div className=\"no-notes\">\r\n        <ImageNote />\r\n        <p>Aún no hay notas creadas</p>\r\n      </div>\r\n      <CreateButton />\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { CreateButton } from \"../components/CreateButton\";\r\nimport { DataGrid } from \"../components/Grid/DataGrid\";\r\nimport { NoDataComponent } from \"../components/NoDataComponent\";\r\nimport { Note, Todo } from \"../types\";\r\n\r\nexport default function Main() {\r\n  const notes = useSelector(\r\n    (state: { notes: Note[]; todos: Todo[] }) => state.notes\r\n  );\r\n  return (\r\n    <div className=\"content\">\r\n      {notes.length === 0 ? (\r\n        <NoDataComponent />\r\n      ) : (\r\n        <>\r\n          <CreateButton />\r\n          <DataGrid data={notes} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { FC } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Appbar } from \"../components/Appbar\";\r\nimport CreatePage from \"../pages/CreatePage\";\r\nimport Main from \"../pages/Main\";\r\n\r\nexport const TodoRoutes: FC = () => {\r\n  return (\r\n    <>\r\n      <Appbar />\r\n      <Switch>\r\n        <Route path=\"/create/note\" exact>\r\n          <CreatePage type=\"note\" />\r\n        </Route>\r\n        <Route path=\"/create/todo\" exact>\r\n          <CreatePage type=\"todo\" />\r\n        </Route>\r\n        <Route path=\"/\" component={Main} exact />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { ProtectedRouteProps } from \"../types\";\r\n\r\nexport const PrivateRoute: FC<ProtectedRouteProps> = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props: any) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { ProtectedRouteProps } from \"../types\";\r\n\r\nexport const PublicRoute: FC<ProtectedRouteProps> = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props: any) =>\r\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { TodoRoutes } from \"./TodoRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n          <PrivateRoute\r\n            component={TodoRoutes}\r\n            isAuthenticated={isLoggedIn}\r\n            path=\"/\"\r\n            exact\r\n          />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/store\";\nimport { AppRouter } from \"./routers/AppRouter\";\n\nexport default function Todo() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport ToDo from \"./ToDo\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<ToDo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}